name: test

on: [workflow_call]  # allow this workflow to be called from other workflows

env:
  PYTHON_VERSION: 3.9
  UV_VERSION: 0.7.18

jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    name: "pytest ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install the project
        run: uv sync

      - name: Run unit tests ðŸ“‰
        run: make pytest

      - name: Tests sphinx ðŸ“š
        run: make sphinx

  docker:
    strategy:
      fail-fast: false
      matrix:
        script:
          - name: Basic
            args: ""
          - name: Deployments[render], Example Api, py3.11, & celery[yes]
            args: "deployments='render' py_version=3.11 use_celery='yes'"
          - name: Deployments[render], Example Api, py3.9, celery[yes], & sentry[yes]
            args: "deployments='render' py_version=3.9 use_celery='yes' use_sentry='yes'"
    name: "Docker ${{ matrix.script.name }}"
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install the project
        run: uv sync

      - name: Docker ${{ matrix.script.name }}
        run: uv run sh tests/test_docker_build.sh ${{ matrix.script.args }}
